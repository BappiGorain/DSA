Given a weighted, undirected, and connected graph with V vertices and E edges, your task is to find the sum
of the weights of the edges in the Minimum Spanning Tree (MST) of the graph. The graph is represented by an adjacency list,
where each element adj[i] is a vector containing pairs of integers. Each pair represents an edge, with the first integer denoting
the endpoint of the edge and the second integer denoting the weight of the edge.


int spanningTree(int V, vector<vector<int>> adj[])
    {
        vector<int> vis(V,0);
        priority_queue<pair<int,int>,vector<pair<int,int>>, greater<pair<int,int>>> pq;
        int sum = 0;
        int node = 0;
        pq.push({0,node});
        while(!pq.empty())
        {
            int wt = pq.top().first;
            node = pq.top().second;
            pq.pop();
            if(vis[node] == 1) continue;
            sum+=wt;
            vis[node] = 1;
            for(auto it: adj[node])
            {
                int adjNode = it[0];
                int adjWt = it[1];
                
                if(vis[adjNode] == 0)
                {
                    pq.push({adjWt,adjNode});
                }
            }
        }
        return sum;
    }
