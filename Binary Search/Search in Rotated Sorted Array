Given a sorted and rotated array arr[] of distinct elements, the task is to find the index of a target key. Return -1
if the key is not found.

Examples :

Input: arr[] = [5, 6, 7, 8, 9, 10, 1, 2, 3], key = 3
Output: 8
Explanation: 3 is found at index 8.
Input: arr[] = [3, 5, 1, 2], key = 6
Output: -1
Explanation: There is no element that has value 6.
Input: arr[] = [33, 42, 72, 99], key = 42
Output: 1
Explanation: 42 is found at index 1.




int search(vector<int>& arr, int k) 
    {
        
        int n =  arr.size();
        int low = 0;
        int high = n-1;
        while(low <= high)
        {
            int mid = (low + high) / 2;
            if(arr[mid] == k) return mid;

            if(arr[low] <= arr[mid]) // left half is sorted
            {
                if(arr[low] <= k and arr[mid] >= k)
                {
                    high = mid - 1;
                }
                else
                {
                    low = mid + 1;
                }
            }
            else // right half is sorted
            {
                if(arr[mid] <= k and arr[high] >= k)
                {
                    low = mid + 1;
                }
                else
                {
                    high = mid - 1;
                }
            }
        }   
        return -1;
    }
