You are given two strings str1 and str2. Your task is to find the length of the longest common substring among the given strings.

Examples:

Input: str1 = "ABCDGH", str2 = "ACDGHR"
Output: 4
Explanation: The longest common substring is "CDGH" which has length 4.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                              ------------ TABULATION ----------------

 int longestCommonSubstr(string str1, string str2)
    {
        int n = str1.size();
        int m = str2.size();
        
        vector<vector<int>> dp(n+1,vector<int> (m+1,0));
        
        int ans = 0;
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(str1[i-1] == str2[j-1]) dp[i][j] =  1 + dp[i-1][j-1];
                else dp[i][j] = 0;
                ans = max(ans,dp[i][j]);
            }
        }
        
        return ans;
    }
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                              ------------ SPACE OPTIMISATION ----------------

int longestCommonSubstr(string str1, string str2)
{
        int n = str1.size();
        int m = str2.size();
        
        vector<int> prev(m+1,0), cur(m+1,0);
        
        int ans = 0;
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(str1[i-1] == str2[j-1]) cur[j] =  1 + prev[j-1];
                else cur[j] = 0;
                ans = max(ans,cur[j]);
            }
            prev = cur;
        }
        
        return ans;
    }
