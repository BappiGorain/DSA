You are given a rectangular matrix mat[][] of size n x m, and your task is to return an array while traversing the matrix in spiral form.

Examples:

Input: mat[][] = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]
Output: [1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5, 6, 7, 11, 10]

vector<int> spirallyTraverse(vector<vector<int> > &mat)
    {
        int n = mat.size();
        int m = mat[0].size();
        int top = 0;
        int left = 0;
        int right = m-1;
        int bottom = n-1;
        vector<int> ans;
        
        while(top <= bottom and left <= right)
        {
            for(int i=left;i<=right;i++)
            {
                ans.push_back(mat[top][i]);
            }
            top++;
            for(int i=top;i<=bottom;i++)
            {
                ans.push_back(mat[i][right]);
            }
            right--;
            if(top<=bottom)
            {
                for(int i=right;i>=left;i--)
                {
                    ans.push_back(mat[bottom][i]);
                }
                bottom--;
            }
            
            if(left <= right)
            {
                for(int i=bottom;i>=top;i--)
                {
                    ans.push_back(mat[i][left]);
                }
                left++;
            }
            
        }
        return ans;
    }
