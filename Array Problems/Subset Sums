Given a array arr of integers, return the sums of all subsets in the list.  Return the sums in any order.

Examples:

Input: arr[] = [2, 3]
Output: [0, 2, 3, 5]
Explanation: When no elements are taken then Sum = 0. When only 2 is taken then Sum = 2. When only 3 is taken then Sum = 3.
When elements 2 and 3 are taken then Sum = 2+3 = 5.
Input: arr[] = [1, 2, 1]
Output: [0, 1, 1, 2, 2, 3, 3, 4]
Explanation: The possible subset sums are 0 (no elements), 1 (either of the 1's), 2 (the element 2), and their combinations.

--------------------------------------------------------------------------------------------------------------------------------

private:
    void solve(vector<int> arr, int i, int n, vector<int> &ans, int sum)
    {
        if(i==n) 
        {
            ans.push_back(sum);
            return;
        }
        solve(arr,i+1,n,ans,sum);
        solve(arr,i+1,n,ans,sum+arr[i]);
        sum-=arr[i];
    }
  public:
    vector<int> subsetSums(vector<int>& arr) 
    {
        vector<int> ans;
        int n = arr.size();
        
        solve(arr,0,n,ans,0);
        
        return ans;
    }
