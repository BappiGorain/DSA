Given two numbers, num1, and num2, represented by linked lists. The task is to return the head of the linked list that represents the sum of these two numbers.

For example, the number 190 will be represented by the linked list, 1->9->0->null, similarly 25 by 2->5->null. Sum of these two numbers is 190 + 25 = 215,
which will be represented by 2->1->5->null. You are required to return the head of the linked list 2->1->5->null.

Note: There can be leading zeros in the input lists, but there should not be any leading zeros in the output list.


Node *reverse(Node *head)
  {
      Node *prev = NULL;
      Node *curr = head;
      while(curr != NULL)
      {
          Node *nextNode = curr->next;
          curr->next = prev;
          prev = curr;
          curr = nextNode;
      }
      return prev;
  }
    // Function to add two numbers represented by linked list.
    Node* addTwoLists(struct Node* num1, struct Node* num2)
    {
        if(num1 == NULL)
        {
            return num2;
            
        }
        if(num2 == NULL)
        {
            return num1;
        }
        
        
        // removing prefix zeros
        while(num1->data == 0)
        {
            num1 = num1->next;
        }
        
        // removing prefix zeros
        while(num2->data == 0)
        {
            num2 = num2->next;
        }
        
        num1 = reverse(num1);
        num2 = reverse(num2);
        
        Node *ans = new Node(-1);
        Node *temp = ans;
        
        int sum = 0;
        int carry = 0;
        
        while(num1 and num2)
        {
            sum = num1->data + num2->data + carry;
            temp->next = new Node(sum%10);
            temp = temp->next;
            carry = sum / 10;
            num1 = num1->next;
            num2 = num2->next;
        }
        
        while(num1)
        {
            sum = num1->data + carry;
            temp->next = new Node(sum%10);
            temp = temp->next;
            carry = sum / 10;
            num1 = num1->next;
        }
        
        while(num2)
        {
            sum = num2->data + carry;
            temp->next = new Node(sum%10);
            temp = temp->next;
            carry = sum / 10;
            num2 = num2->next;
        }
        
        while(carry)
        {
            temp->next = new Node(carry%10);
            temp = temp->next;
            carry = carry / 10;
        }
        
        ans= reverse(ans->next);
        return ans;
    }
