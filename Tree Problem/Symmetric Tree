Given a Binary Tree. Check whether it is Symmetric or not, i.e. whether the binary tree is a Mirror image of itself or not.

Example 1:

Input:
         5
       /   \
      1     1
     /       \
    2         2
Output: 
True
Explanation: 
Tree is mirror image of itself i.e. tree is symmetric
Example 2:

Input:
         5
       /   \
      10     10
     /  \     \
    20  20     30
Output: 
False
------------------------------------------------------------------------------------------------------------------------------

private:
    bool solve(Node *root1, Node *root2)
    {
        if(root1 == NULL and root2 == NULL) return true;
        if((root1 == NULL and root2 != NULL) 
            or (root1 != NULL and root2 == NULL)) return false;
        if(root1->data != root2->data) return false;
        
        bool ls = solve(root1->left,root2->right);
        bool rs = solve(root1->right,root2->left);
        
        return ls and rs;
    }
    
    
    public:
    bool isSymmetric(struct Node* root)
    {
        return solve(root->left, root->right);
    }
