Given an array arr[ ] of integers, the task is to find the next greater element for each element of the array in order of their appearance in the array.
Next greater element of an element in the array is the nearest element on the right which is greater than the current element.
If there does not exist next greater of current element, then next greater element for current element is -1. 
For example, next greater of the last element is always -1.
Examples

Input: arr[] = [1, 3, 2, 4]
Output: [3, 4, 4, -1]
Explanation: The next larger element to 1 is 3, 3 is 4, 2 is 4 and for 4, since it doesn't exist, it is -1.


vector<int> nextLargerElement(vector<int>& arr) {
    int n = arr.size();
    stack<int> st;
    vector<int> ans(n); // Directly initialize with the size of `arr`.

    // Traverse the array from the end
    for (int i = n - 1; i >= 0; i--) {
        // Pop elements from the stack smaller than or equal to the current element
        while (!st.empty() && st.top() <= arr[i]) {
            st.pop();
        }

        // If stack is empty, no greater element; otherwise, stack's top is the answer
        ans[i] = st.empty() ? -1 : st.top();

        // Push the current element into the stack
        st.push(arr[i]);
    }

    return ans;
}
